FTODO:

	- make the QWER settings saved in editor settings as well
	
	- indicate if scene is saved or not

	- convert all console messages into an editor console panel

	- move all saveable editor settings into a struct to pass in

	- integrate SPIR-V shaders

	- move some editor settings to scene settings (like editor camera) or separate it into a sceneEditorSetting file specific to scene

	- move editor serializer to separate editor serializer class

	- implement projects so we should have editor settings, scene settings, and project settings

	- make it so you can double click scenes in content browser to open them
	
	- clean up content browser (center text, make proper back button, etc)

	- custom shaders, post processing, materials

	- separate scenehierarchy panel and properties panel

	- refactor texture setting in spritecomponent to look better and show filepath using

	- save scene prompt on close

	- implement layers

	- move viewport into separate layer too

	- panels should be able to be closed and reopened via a task bar section called "windows"

	- maybe even make a panel manager class

	- runtime performance in stats panel
	
	- c# scripting

	- reflection system (serialize values and show them in properties panel!)

	- physics

	- box2D

	- particle system

	- gravity

	- vfx graph

	- undo and redo

	- asset manager so a new texture won't be used for every entity that uses that texture

	- drag and drop stuff should check if it's the valid filetype, and should pop up an error popup otherwise

	- text rendering!

	- layout system?

	- menu screens

	- standalone runtime and standalone serialization

	- refactor camera component properties layout

	- audio

	- networking

	- tilemap component?

	- optimization for multithreading!

	- subentities (scene hierarhcy doesn't really h"have" hierarchy atm)

	- optick profiler

	- support distrubution (custom formats)

	- overhaul animations to include things like flags and extra functionality, or even calling functions on certain frames

	- make native scripting more stable

	- some sort of generate new native script button

IN PROGRESS:


IMPLEMENTED TICKETS:

	- add in native scripting component and update serializer for it

	- add in warnings for unstable parts of code

	- native scripts should only run if viewport is focused

	- texture button in sprite component should also bring up a file selector

	- refactor scene serializer to serialize new spritecomponent settings

	- implement save scene (not save as)

	- add more stats to the stat panel, maybe put it in a separate panel class even

	- sprite renderer component full makeover to include single textures, subtextures, and animations

	- implement animations

	- spitecomponent should support subtextures or make that a separate component

	- make sprite renderer component take in all possibe parameters like tiling factor, etc

	- modify imgui styles on the properties panel to have more padding

	- refactor cameracomponent UI
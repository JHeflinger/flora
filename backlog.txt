TODO:

	- optimization: if something is not being affected for a while, stop simulating it

	- custom editor settings like color scheme, etc

	- bug: there is some instability when dealing with entt handles between int to uint32_t conversions

	- integrate SPIR-V shaders

	- implement projects

	- custom shaders, post processing, materials

	- implement layers
	
	- c# scripting

	- reflection system (serialize values and show them in properties panel!)

	- particle system

	- vfx graph

	- undo and redo

	- text rendering!

	- layout system

	- standalone runtime and standalone serialization

	- audio (openal)

	- networking

	- optimization for multithreading!

	- simplify popup menus (New __ options should be condensed into an expandable "New..")

	- optick profiler

	- support distrubution (custom formats)

	- overhaul animations to include things like flags and extra functionality, or even calling functions on certain frames

	- make native scripting more stable

	- project settings?

	- move some editor settings to scene settings (like editor camera) or separate it into a sceneEditorSetting file specific to scene

	- content browser select multiple

	- move editor dependent assets into a protected assets folder

	- startup splash screen oooooo

	- bug: gpu monitoring doesn't really work depending on graphics card

	- sprites should have the option to linear filter or not

	- texture hot reloading

	- more texture support

	- bug: gpu not being detected in stats dynamically

	- bug: moving rotation on subentities affects the scale

	- bug: physics don't work perfectly when it comes to sub-entities - something is affecting scale

	- bug: offset circle collider is kinda weird, are we sure we're using the body transform and not the entity transform during physics simulation?

	- circle physics collider visual consistent line width

	- label component

	- simulate physics button?

	- pause / step scene button

	- bug: mono is not seeing namespaces

	- redo flpch

	- redo includes, .h should be relative, everything else absolute

	- since nativescripts are pre compiled, you should just be able to select from the available ones when adding them (this can also resolve nativescript stability issues)

	- restructure how gizmo keys work, they shouldn't switch if you're typing in imgui

	- refactor script manager to use scripts not just native scripts

	- refactor classes / reorder them to they're just neater and more readable

	- try to use forward declarations in .h files if possible and iclude everyting in the cpp files instead

	- documentation?

	- script component in propertiespanel looks ugly, fix it

	- should scripts be before or after physics calculations?

	- outline on selected entity

	- refactor some things to use component group so we only have one place we need to add a new component to

	- script component copy paste etc

	- refine copy and paste

	- script hot reloading should detect when save file even on not runtime and update serialized fields in properties panel instantly!

IN PROGRESS:
	
	- c# scripting!

IMPLEMENTED TICKETS:

	- show camera view box for perspective

	- show camera view box for orthographic

	- visualized physics colliders

	- UI for toggling collider visuals

	- serialize editor settings for physics collider lines on/off

	- circle physics collider

	- circle physcis collider copy paste

	- serialize circle physics collider

	- fix drag camera by mouse

	- option to use editor camera to navigate runtime.